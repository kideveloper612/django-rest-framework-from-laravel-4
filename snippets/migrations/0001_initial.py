# Generated by Django 3.1.4 on 2021-01-12 03:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLogArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.PositiveIntegerField(blank=True, null=True)),
                ('spot', models.PositiveIntegerField(blank=True, null=True)),
                ('news', models.PositiveIntegerField(blank=True, null=True)),
                ('feed', models.PositiveIntegerField(blank=True, null=True)),
                ('advertising', models.PositiveIntegerField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('module', models.CharField(blank=True, max_length=45, null=True)),
                ('controller', models.CharField(blank=True, max_length=45, null=True)),
                ('action', models.CharField(blank=True, max_length=45, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=245, null=True)),
                ('ip', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'access_log_archive',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('street', models.CharField(blank=True, max_length=145, null=True)),
                ('number', models.CharField(blank=True, max_length=15, null=True)),
                ('complement', models.CharField(blank=True, max_length=245, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='AddressCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
            ],
            options={
                'db_table': 'address_city',
            },
        ),
        migrations.CreateModel(
            name='AddressCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('code', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'address_country',
            },
        ),
        migrations.CreateModel(
            name='Advertising',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(blank=True, max_length=245, null=True)),
                ('file_image', models.CharField(blank=True, max_length=145, null=True)),
                ('file_video_mp4', models.CharField(blank=True, max_length=145, null=True)),
                ('file_video_mov', models.CharField(blank=True, max_length=145, null=True)),
                ('file_video_webm', models.CharField(blank=True, max_length=145, null=True)),
                ('script', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=145)),
                ('view_time', models.IntegerField(blank=True, null=True)),
                ('view_count', models.IntegerField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=245, null=True)),
                ('link_target', models.CharField(blank=True, max_length=45, null=True)),
                ('app_view', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'advertising',
            },
        ),
        migrations.CreateModel(
            name='AdvertisingPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('controller', models.CharField(blank=True, max_length=45, null=True)),
                ('action', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'advertising_page',
            },
        ),
        migrations.CreateModel(
            name='AdvertisingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'advertising_type',
            },
        ),
        migrations.CreateModel(
            name='AdvertisingZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'advertising_zone',
            },
        ),
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=245)),
                ('remember_token', models.CharField(blank=True, max_length=45, null=True)),
                ('updated_at', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'api',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'snippets_auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'snippets_auth_user',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starts_at', models.DateTimeField()),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=145)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'campaign',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=145, null=True)),
                ('usage_limit', models.IntegerField()),
                ('usage_restricted', models.IntegerField()),
                ('default', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='CouponCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validity_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(max_length=45, unique=True)),
                ('status', models.IntegerField()),
                ('coupon', models.ForeignKey(db_column='coupon', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.coupon')),
            ],
            options={
                'db_table': 'coupon_code',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('app_version', models.CharField(blank=True, max_length=45, null=True)),
                ('os', models.CharField(blank=True, max_length=45, null=True)),
                ('code', models.CharField(blank=True, max_length=245, null=True, unique=True)),
                ('token', models.CharField(blank=True, max_length=245, null=True, unique=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'snippets_django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'snippets_django_session',
            },
        ),
        migrations.CreateModel(
            name='EmailContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'email_context',
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('message', models.CharField(max_length=245)),
                ('embed_url', models.CharField(blank=True, max_length=245, null=True)),
                ('highlight', models.IntegerField(blank=True, null=True)),
                ('subscriber_only', models.IntegerField(blank=True, null=True)),
                ('registered_only', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'feed',
            },
        ),
        migrations.CreateModel(
            name='FeedMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=245)),
                ('sort', models.IntegerField()),
            ],
            options={
                'db_table': 'feed_message',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=245)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('credit', models.CharField(blank=True, max_length=245, null=True)),
                ('file', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'media',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.PositiveIntegerField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=245, null=True)),
                ('title', models.CharField(max_length=45)),
                ('module', models.CharField(blank=True, max_length=45, null=True)),
                ('url', models.CharField(max_length=245)),
                ('target', models.CharField(blank=True, max_length=45, null=True)),
                ('order', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('published_at', models.DateTimeField()),
                ('title', models.CharField(max_length=145)),
                ('lead', models.CharField(blank=True, max_length=145, null=True)),
                ('content', models.TextField()),
                ('keywords', models.CharField(max_length=245)),
                ('highlight', models.IntegerField()),
                ('subscriber_only', models.IntegerField(blank=True, null=True)),
                ('registered_only', models.IntegerField(blank=True, null=True)),
                ('page_title', models.CharField(max_length=145)),
                ('page_description', models.CharField(max_length=245)),
                ('page_keywords', models.CharField(max_length=145)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_at', models.DateTimeField()),
                ('name', models.CharField(max_length=145)),
                ('push_priority', models.CharField(blank=True, max_length=45, null=True)),
                ('push_data', models.TextField(blank=True, null=True)),
                ('email_subject', models.CharField(blank=True, max_length=145, null=True)),
                ('email_body', models.TextField(blank=True, null=True)),
                ('sms_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='NotificationFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=145, null=True)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('query', models.TextField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notification_filter',
            },
        ),
        migrations.CreateModel(
            name='NotificationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('css_class', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'notification_status',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('total', models.IntegerField()),
                ('total_paid', models.IntegerField()),
                ('total_pending', models.IntegerField()),
                ('total_discounted', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('captured_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('authorization_code', models.CharField(blank=True, max_length=145, null=True)),
                ('order_key', models.CharField(blank=True, max_length=145, null=True)),
                ('transaction_key', models.CharField(blank=True, max_length=145, null=True)),
                ('instant_buy_key', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_brand', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_number', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_holder', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_date', models.DateField(blank=True, null=True)),
                ('credit_card_cvv', models.IntegerField(blank=True, null=True)),
                ('slip_our_number', models.CharField(blank=True, max_length=245, null=True)),
                ('slip_bar_code', models.CharField(blank=True, max_length=245, null=True)),
                ('slip_url', models.CharField(blank=True, max_length=245, null=True)),
                ('order', models.ForeignKey(db_column='order', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.order')),
            ],
            options={
                'db_table': 'order_payment',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=145, null=True)),
                ('css_class', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'order_status',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=145, null=True)),
                ('name', models.CharField(max_length=145)),
                ('sponsor', models.CharField(blank=True, max_length=145, null=True)),
                ('note', models.CharField(blank=True, max_length=245, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('foundation_date', models.DateField(blank=True, null=True)),
                ('age_rating', models.IntegerField(blank=True, null=True)),
                ('business_hours', models.CharField(blank=True, max_length=245, null=True)),
                ('address', models.CharField(blank=True, max_length=245, null=True)),
                ('address_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address_note', models.CharField(blank=True, max_length=145, null=True)),
                ('address_district', models.CharField(blank=True, max_length=45, null=True)),
                ('address_city', models.CharField(blank=True, max_length=45, null=True)),
                ('address_state', models.CharField(blank=True, max_length=5, null=True)),
                ('address_country', models.CharField(blank=True, max_length=45, null=True)),
                ('address_postal_code', models.CharField(blank=True, max_length=45, null=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=145, null=True)),
                ('site', models.CharField(blank=True, max_length=145, null=True)),
                ('facebook', models.CharField(blank=True, max_length=145, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'partner',
            },
        ),
        migrations.CreateModel(
            name='PaymentAcquirer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'payment_acquirer',
            },
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'payment_gateway',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=145, null=True)),
                ('name', models.CharField(max_length=145)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_type',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('description', models.CharField(blank=True, max_length=145, null=True)),
                ('status', models.IntegerField()),
                ('menu', models.ForeignKey(db_column='menu', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.menu')),
            ],
            options={
                'db_table': 'permission',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.IntegerField()),
                ('days', models.IntegerField()),
                ('free_days', models.IntegerField()),
                ('recurrences', models.IntegerField()),
                ('session_limit', models.IntegerField()),
                ('page_title', models.CharField(max_length=145)),
                ('page_description', models.CharField(max_length=245)),
                ('page_keywords', models.CharField(max_length=145)),
                ('status', models.IntegerField()),
                ('quantidade_usos', models.IntegerField(blank=True, null=True)),
                ('credits_reniew', models.IntegerField(blank=True, null=True)),
                ('credits_reniew_date', models.DateTimeField(blank=True, null=True)),
                ('eh_basico', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plan',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=145)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('rule', models.TextField(blank=True, null=True)),
                ('discount_type', models.CharField(max_length=45)),
                ('discount_amount', models.FloatField()),
                ('recurrences', models.IntegerField(blank=True, null=True)),
                ('accumulative', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'promotion',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=245)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=245)),
                ('description', models.TextField(blank=True, null=True)),
                ('param', models.CharField(max_length=145, unique=True)),
                ('value', models.CharField(blank=True, max_length=245, null=True)),
            ],
            options={
                'db_table': 'setting',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'sport',
            },
        ),
        migrations.CreateModel(
            name='Tide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=245)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tide',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=145, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=145, null=True, unique=True)),
                ('cell_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('doc_cpf', models.CharField(blank=True, max_length=15, null=True)),
                ('address_street', models.CharField(blank=True, max_length=145, null=True)),
                ('address_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address_complement', models.CharField(blank=True, max_length=145, null=True)),
                ('address_district', models.CharField(blank=True, max_length=45, null=True)),
                ('address_city', models.CharField(blank=True, max_length=45, null=True)),
                ('address_state', models.CharField(blank=True, max_length=45, null=True)),
                ('address_country', models.CharField(blank=True, max_length=45, null=True)),
                ('address_zip_code', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=45, null=True)),
                ('send_email', models.IntegerField(blank=True, null=True)),
                ('send_push', models.IntegerField(blank=True, null=True)),
                ('send_sms', models.IntegerField(blank=True, null=True)),
                ('activation_code', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.IntegerField()),
                ('credits', models.IntegerField(blank=True, null=True)),
                ('pbasic_reniew', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=145, null=True)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'user_group',
            },
        ),
        migrations.CreateModel(
            name='UserUserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
                ('user_group', models.ForeignKey(db_column='user_group', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.usergroup')),
            ],
            options={
                'db_table': 'user_user_group',
            },
        ),
        migrations.CreateModel(
            name='UserPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('instant_buy_key', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_brand', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_number', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_holder', models.CharField(blank=True, max_length=145, null=True)),
                ('credit_card_date', models.DateField(blank=True, null=True)),
                ('credit_card_cvv', models.IntegerField(blank=True, null=True)),
                ('request', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('payment_type', models.ForeignKey(blank=True, db_column='payment_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymenttype')),
                ('user', models.OneToOneField(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'user_payment',
            },
        ),
        migrations.CreateModel(
            name='UserGroupPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(db_column='permission', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.permission')),
                ('user_group', models.ForeignKey(db_column='user_group', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.usergroup')),
            ],
            options={
                'db_table': 'user_group_permission',
            },
        ),
        migrations.CreateModel(
            name='UserGroupMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.ForeignKey(db_column='menu', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.menu')),
                ('user_group', models.ForeignKey(db_column='user_group', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.usergroup')),
            ],
            options={
                'db_table': 'user_group_menu',
            },
        ),
        migrations.CreateModel(
            name='TideData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('height', models.FloatField()),
                ('moon', models.CharField(blank=True, max_length=45, null=True)),
                ('tide', models.ForeignKey(db_column='tide', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.tide')),
            ],
            options={
                'db_table': 'tide_data',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('expiration_at', models.DateTimeField(blank=True, null=True)),
                ('session_limit', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('order_item', models.PositiveIntegerField(blank=True, null=True)),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, related_name='log_plan', to='snippets.plan')),
                ('plan_to_renew', models.ForeignKey(blank=True, db_column='plan_to_renew', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='log_renew', to='snippets.plan')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'subscription_log',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('expiration_at', models.DateTimeField(blank=True, null=True)),
                ('session_limit', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('order_item', models.PositiveIntegerField(blank=True, null=True)),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, related_name='plan', to='snippets.plan')),
                ('plan_to_renew', models.ForeignKey(blank=True, db_column='plan_to_renew', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='renew', to='snippets.plan')),
                ('user', models.OneToOneField(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'subscription',
            },
        ),
        migrations.CreateModel(
            name='Spot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream', models.CharField(blank=True, max_length=245, null=True)),
                ('m3u8', models.CharField(blank=True, max_length=245, null=True)),
                ('player_embed_url', models.CharField(blank=True, max_length=245, null=True)),
                ('camera_panel', models.CharField(blank=True, max_length=245, null=True)),
                ('station', models.CharField(blank=True, max_length=245, null=True)),
                ('lat', models.CharField(blank=True, max_length=45, null=True)),
                ('lng', models.CharField(blank=True, max_length=45, null=True)),
                ('cover_image', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(max_length=45)),
                ('note', models.CharField(blank=True, max_length=245, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notice', models.TextField(blank=True, null=True)),
                ('notice_is_visible', models.IntegerField(blank=True, null=True)),
                ('viewing_time', models.IntegerField()),
                ('subscriber_only', models.IntegerField(blank=True, null=True)),
                ('registered_only', models.IntegerField(blank=True, null=True)),
                ('highlight', models.IntegerField()),
                ('page_title', models.CharField(max_length=145)),
                ('page_description', models.CharField(max_length=245)),
                ('page_keywords', models.CharField(max_length=145)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('wave_height', models.FloatField(blank=True, null=True)),
                ('wave_direction', models.IntegerField(blank=True, null=True)),
                ('wind_speed', models.FloatField(blank=True, null=True)),
                ('wind_direction', models.IntegerField(blank=True, null=True)),
                ('water_temperature', models.IntegerField(blank=True, null=True)),
                ('temperature', models.IntegerField(blank=True, null=True)),
                ('camerite', models.IntegerField(blank=True, null=True)),
                ('magic_sea_weed', models.IntegerField(blank=True, null=True)),
                ('windguru', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('address', models.ForeignKey(blank=True, db_column='address', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.address')),
                ('partner', models.ForeignKey(blank=True, db_column='partner', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.partner')),
                ('tide', models.ForeignKey(blank=True, db_column='tide', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.tide')),
            ],
            options={
                'db_table': 'spot',
            },
        ),
        migrations.CreateModel(
            name='SmsQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('cell_phone', models.CharField(max_length=15)),
                ('message', models.CharField(max_length=245)),
                ('status', models.IntegerField()),
                ('response', models.TextField(blank=True, null=True)),
                ('notification', models.ForeignKey(blank=True, db_column='notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.notification')),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'sms_queue',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('session_code', models.CharField(blank=True, max_length=245, null=True)),
                ('session_origin', models.CharField(blank=True, max_length=15, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True)),
                ('note', models.CharField(blank=True, max_length=245, null=True)),
                ('status', models.IntegerField()),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'session',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friendly_url', models.CharField(max_length=245, unique=True)),
                ('redirect', models.CharField(blank=True, max_length=245, null=True)),
                ('news', models.ForeignKey(blank=True, db_column='news', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.news')),
                ('plan', models.ForeignKey(blank=True, db_column='plan', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.plan')),
                ('spot', models.ForeignKey(blank=True, db_column='spot', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
            ],
            options={
                'db_table': 'route',
            },
        ),
        migrations.CreateModel(
            name='PushQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(max_length=45)),
                ('data', models.TextField()),
                ('status', models.IntegerField()),
                ('response', models.TextField(blank=True, null=True)),
                ('device', models.ForeignKey(db_column='device', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.device')),
                ('notification', models.ForeignKey(blank=True, db_column='notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.notification')),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'push_queue',
            },
        ),
        migrations.CreateModel(
            name='PromotionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.plan')),
                ('promotion', models.ForeignKey(db_column='promotion', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.promotion')),
            ],
            options={
                'db_table': 'promotion_plan',
            },
        ),
        migrations.CreateModel(
            name='PromotionPaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.ForeignKey(db_column='payment_type', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymenttype')),
                ('promotion', models.ForeignKey(db_column='promotion', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.promotion')),
            ],
            options={
                'db_table': 'promotion_payment_type',
            },
        ),
        migrations.CreateModel(
            name='PlanSpot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.plan')),
                ('spot', models.ForeignKey(db_column='spot', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
            ],
            options={
                'db_table': 'plan_spot',
            },
        ),
        migrations.CreateModel(
            name='PlanResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.plan')),
                ('resource', models.ForeignKey(db_column='resource', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.resource')),
            ],
            options={
                'db_table': 'plan_resource',
            },
        ),
        migrations.CreateModel(
            name='PlanPaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.ForeignKey(db_column='payment_type', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymenttype')),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.plan')),
            ],
            options={
                'db_table': 'plan_payment_type',
            },
        ),
        migrations.CreateModel(
            name='PaymentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=145, null=True)),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(blank=True, max_length=145, null=True)),
                ('css_class', models.CharField(blank=True, max_length=45, null=True)),
                ('order_status', models.ForeignKey(blank=True, db_column='order_status', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.orderstatus')),
            ],
            options={
                'db_table': 'payment_status',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=145, null=True)),
                ('name', models.CharField(max_length=145)),
                ('description', models.CharField(blank=True, max_length=245, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax_type', models.CharField(blank=True, max_length=1, null=True)),
                ('slip_validity_days', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('payment_type', models.ForeignKey(blank=True, db_column='payment_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymenttype')),
            ],
            options={
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='PartnerCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(db_column='category', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.category')),
                ('partner', models.ForeignKey(db_column='partner', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.partner')),
            ],
            options={
                'db_table': 'partner_category',
            },
        ),
        migrations.CreateModel(
            name='OrderPaymentRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('request', models.TextField(blank=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('order_payment', models.ForeignKey(db_column='order_payment', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.orderpayment')),
                ('payment_gateway', models.ForeignKey(db_column='payment_gateway', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentgateway')),
            ],
            options={
                'db_table': 'order_payment_request',
            },
        ),
        migrations.CreateModel(
            name='OrderPaymentCallback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('request', models.TextField(blank=True, null=True)),
                ('order_payment', models.ForeignKey(db_column='order_payment', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.orderpayment')),
                ('payment_gateway', models.ForeignKey(db_column='payment_gateway', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentgateway')),
            ],
            options={
                'db_table': 'order_payment_callback',
            },
        ),
        migrations.AddField(
            model_name='orderpayment',
            name='payment_acquirer',
            field=models.ForeignKey(blank=True, db_column='payment_acquirer', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentacquirer'),
        ),
        migrations.AddField(
            model_name='orderpayment',
            name='payment_gateway',
            field=models.ForeignKey(blank=True, db_column='payment_gateway', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentgateway'),
        ),
        migrations.AddField(
            model_name='orderpayment',
            name='payment_method',
            field=models.ForeignKey(blank=True, db_column='payment_method', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentmethod'),
        ),
        migrations.AddField(
            model_name='orderpayment',
            name='payment_status',
            field=models.ForeignKey(blank=True, db_column='payment_status', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentstatus'),
        ),
        migrations.CreateModel(
            name='OrderLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('description', models.CharField(max_length=245)),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True)),
                ('order', models.ForeignKey(db_column='order', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.order')),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'order_log',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.IntegerField()),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('applied', models.IntegerField(blank=True, null=True)),
                ('order', models.ForeignKey(db_column='order', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.order')),
                ('plan', models.ForeignKey(db_column='plan', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.plan')),
            ],
            options={
                'db_table': 'order_item',
            },
        ),
        migrations.CreateModel(
            name='OrderData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=45)),
                ('user_email', models.CharField(max_length=145)),
                ('user_cell_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('user_doc_cpf', models.CharField(blank=True, max_length=45, null=True)),
                ('user_address_street', models.CharField(blank=True, max_length=145, null=True)),
                ('user_address_number', models.CharField(blank=True, max_length=45, null=True)),
                ('user_address_complement', models.CharField(blank=True, max_length=145, null=True)),
                ('user_address_district', models.CharField(blank=True, max_length=45, null=True)),
                ('user_address_city', models.CharField(blank=True, max_length=45, null=True)),
                ('user_address_state', models.CharField(blank=True, max_length=45, null=True)),
                ('user_address_country', models.CharField(blank=True, max_length=45, null=True)),
                ('user_address_zip_code', models.IntegerField(blank=True, null=True)),
                ('order', models.OneToOneField(db_column='order', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.order')),
            ],
            options={
                'db_table': 'order_data',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='order_status',
            field=models.ForeignKey(db_column='order_status', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.orderstatus'),
        ),
        migrations.AddField(
            model_name='order',
            name='spotid',
            field=models.ForeignKey(blank=True, db_column='spotid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_spotid', to='snippets.spot'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_filter',
            field=models.ForeignKey(db_column='notification_filter', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.notificationfilter'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_status',
            field=models.ForeignKey(db_column='notification_status', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.notificationstatus'),
        ),
        migrations.CreateModel(
            name='NewsMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highlight', models.IntegerField(blank=True, null=True)),
                ('media', models.ForeignKey(db_column='media', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.media')),
                ('news', models.ForeignKey(db_column='news', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.news')),
            ],
            options={
                'db_table': 'news_media',
            },
        ),
        migrations.AddField(
            model_name='news',
            name='sport',
            field=models.ForeignKey(blank=True, db_column='sport', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.sport'),
        ),
        migrations.AddField(
            model_name='news',
            name='spot',
            field=models.ForeignKey(blank=True, db_column='spot', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot'),
        ),
        migrations.CreateModel(
            name='FeedMessageOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=245)),
                ('feed_message', models.ForeignKey(db_column='feed_message', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.feedmessage')),
            ],
            options={
                'db_table': 'feed_message_option',
            },
        ),
        migrations.CreateModel(
            name='FeedMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highlight', models.IntegerField(blank=True, null=True)),
                ('feed', models.ForeignKey(blank=True, db_column='feed', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.feed')),
                ('media', models.ForeignKey(blank=True, db_column='media', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.media')),
            ],
            options={
                'db_table': 'feed_media',
            },
        ),
        migrations.AddField(
            model_name='feed',
            name='news',
            field=models.ForeignKey(blank=True, db_column='news', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.news'),
        ),
        migrations.AddField(
            model_name='feed',
            name='sport',
            field=models.ForeignKey(blank=True, db_column='sport', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.sport'),
        ),
        migrations.AddField(
            model_name='feed',
            name='spot',
            field=models.ForeignKey(blank=True, db_column='spot', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot'),
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('from_field', models.CharField(blank=True, db_column='from', max_length=245, null=True)),
                ('to', models.CharField(max_length=245)),
                ('cc', models.CharField(blank=True, max_length=245, null=True)),
                ('bcc', models.CharField(blank=True, max_length=245, null=True)),
                ('subject', models.CharField(max_length=245)),
                ('body', models.TextField()),
                ('status', models.IntegerField()),
                ('smtp_response', models.TextField(blank=True, null=True)),
                ('notification', models.ForeignKey(blank=True, db_column='notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.notification')),
                ('order', models.ForeignKey(blank=True, db_column='order', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.order')),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'email_queue',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('subject', models.CharField(max_length=145)),
                ('body', models.TextField()),
                ('status', models.IntegerField()),
                ('email_context', models.ForeignKey(db_column='email_context', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.emailcontext')),
                ('order_status', models.ForeignKey(blank=True, db_column='order_status', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.orderstatus')),
                ('payment_method', models.ForeignKey(blank=True, db_column='payment_method', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentmethod')),
                ('payment_status', models.ForeignKey(blank=True, db_column='payment_status', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.paymentstatus')),
            ],
            options={
                'db_table': 'email',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'snippets_django_content_type',
                'unique_together': {('app_label', 'model')},
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.djangocontenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authuser')),
            ],
            options={
                'db_table': 'snippets_django_admin_log',
            },
        ),
        migrations.AddField(
            model_name='device',
            name='user',
            field=models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user'),
        ),
        migrations.CreateModel(
            name='CouponUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('coupon', models.ForeignKey(db_column='coupon', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.coupon')),
                ('coupon_code', models.ForeignKey(blank=True, db_column='coupon_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.couponcode')),
                ('order_item', models.ForeignKey(blank=True, db_column='order_item', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.orderitem')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'coupon_usage',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='promotion',
            field=models.ForeignKey(db_column='promotion', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.promotion'),
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('wave_height', models.FloatField(blank=True, null=True)),
                ('wave_height_min', models.FloatField(blank=True, null=True)),
                ('wave_height_max', models.FloatField(blank=True, null=True)),
                ('wave_period', models.IntegerField(blank=True, null=True)),
                ('wave_direction', models.IntegerField(blank=True, null=True)),
                ('wind_speed', models.FloatField(blank=True, null=True)),
                ('wind_direction', models.IntegerField(blank=True, null=True)),
                ('wind_gust', models.IntegerField(blank=True, null=True)),
                ('water_temperature', models.IntegerField(blank=True, null=True)),
                ('temperature', models.IntegerField(blank=True, null=True)),
                ('weather', models.IntegerField(blank=True, null=True)),
                ('precipitation', models.FloatField(blank=True, null=True)),
                ('spot', models.ForeignKey(db_column='spot', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
            ],
            options={
                'db_table': 'condition',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.djangocontenttype')),
            ],
            options={
                'db_table': 'snippets_auth_permission',
                'unique_together': {('content_type', 'codename')},
            },
        ),
        migrations.CreateModel(
            name='AdvertisingSpot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertising', models.ForeignKey(db_column='advertising', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.advertising')),
                ('spot', models.ForeignKey(db_column='spot', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
            ],
            options={
                'db_table': 'advertising_spot',
            },
        ),
        migrations.AddField(
            model_name='advertising',
            name='advertising_page',
            field=models.ForeignKey(blank=True, db_column='advertising_page', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.advertisingpage'),
        ),
        migrations.AddField(
            model_name='advertising',
            name='advertising_type',
            field=models.ForeignKey(db_column='advertising_type', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.advertisingtype'),
        ),
        migrations.AddField(
            model_name='advertising',
            name='advertising_zone',
            field=models.ForeignKey(blank=True, db_column='advertising_zone', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.advertisingzone'),
        ),
        migrations.AddField(
            model_name='advertising',
            name='campaign',
            field=models.ForeignKey(blank=True, db_column='campaign', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.campaign'),
        ),
        migrations.CreateModel(
            name='AddressState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('code', models.CharField(blank=True, max_length=5, null=True)),
                ('address_country', models.ForeignKey(db_column='address_country', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.addresscountry')),
            ],
            options={
                'db_table': 'address_state',
            },
        ),
        migrations.CreateModel(
            name='AddressDistrict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=145)),
                ('address_city', models.ForeignKey(db_column='address_city', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.addresscity')),
            ],
            options={
                'db_table': 'address_district',
            },
        ),
        migrations.AddField(
            model_name='addresscity',
            name='address_state',
            field=models.ForeignKey(db_column='address_state', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.addressstate'),
        ),
        migrations.AddField(
            model_name='address',
            name='address_district',
            field=models.ForeignKey(db_column='address_district', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.addressdistrict'),
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('module', models.CharField(blank=True, max_length=45, null=True)),
                ('controller', models.CharField(blank=True, max_length=45, null=True)),
                ('action', models.CharField(blank=True, max_length=45, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=245, null=True)),
                ('ip', models.CharField(blank=True, max_length=45, null=True)),
                ('advertising', models.ForeignKey(blank=True, db_column='advertising', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.advertising')),
                ('feed', models.ForeignKey(blank=True, db_column='feed', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.feed')),
                ('news', models.ForeignKey(blank=True, db_column='news', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.news')),
                ('spot', models.ForeignKey(blank=True, db_column='spot', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
                ('user', models.ForeignKey(blank=True, db_column='user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'access_log',
            },
        ),
        migrations.CreateModel(
            name='UserSpotBasicPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('is_credited', models.IntegerField(blank=True, null=True)),
                ('spot', models.ForeignKey(db_column='spot', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'user_spot_basic_plan',
                'unique_together': {('spot', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserSpot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('is_credited', models.IntegerField(blank=True, null=True)),
                ('spot', models.ForeignKey(db_column='spot', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.spot')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'user_spot',
                'unique_together': {('spot', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserSport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.ForeignKey(db_column='sport', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.sport')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.user')),
            ],
            options={
                'db_table': 'user_sport',
                'unique_together': {('user', 'sport')},
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authpermission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authuser')),
            ],
            options={
                'db_table': 'snippets_auth_user_user_permissions',
                'unique_together': {('user', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authuser')),
            ],
            options={
                'db_table': 'snippets_auth_user_groups',
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authgroup')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='snippets.authpermission')),
            ],
            options={
                'db_table': 'snippets_auth_group_permissions',
                'unique_together': {('group', 'permission')},
            },
        ),
    ]
